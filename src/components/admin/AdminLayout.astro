---
export interface Props {
  title: string;
  description?: string;
  activeSection?: string;
}

const { title, description, activeSection } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background: #141414;
            color: white;
            min-height: 100vh;
        }

        .dashboard-layout {
            display: grid;
            grid-template-columns: 280px 1fr;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            background: linear-gradient(180deg, rgba(244, 162, 97, 0.1) 0%, rgba(0, 0, 0, 0.9) 100%);
            backdrop-filter: blur(20px);
            border-right: 1px solid rgba(244, 162, 97, 0.2);
            padding: 2rem;
            position: fixed;
            width: 280px;
            height: 100vh;
            overflow-y: auto;
        }

        .sidebar-header {
            text-align: center;
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 2px solid rgba(244, 162, 97, 0.3);
        }

        .sidebar-title {
            font-size: 1.5rem;
            color: #f4a261;
            font-weight: 300;
            margin-bottom: 0.5rem;
        }

        .sidebar-subtitle {
            font-size: 0.8rem;
            color: #ccc;
            opacity: 0.7;
        }

        .sidebar-nav {
            list-style: none;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            gap: 1rem;
            color: white;
            text-decoration: none;
            padding: 1rem;
            border-radius: 10px;
            transition: all 0.3s ease;
            font-weight: 500;
            border-left: 3px solid transparent;
        }

        .nav-link:hover,
        .nav-link.active {
            background: rgba(244, 162, 97, 0.1);
            border-left-color: #f4a261;
            transform: translateX(5px);
            color: #f4a261;
        }

        .nav-icon {
            font-size: 1.2rem;
            width: 20px;
            text-align: center;
        }

        .sidebar-footer {
            position: absolute;
            bottom: 2rem;
            left: 2rem;
            right: 2rem;
        }

        .user-info {
            background: rgba(244, 162, 97, 0.1);
            padding: 1rem;
            border-radius: 10px;
            border: 1px solid rgba(244, 162, 97, 0.2);
            margin-bottom: 1rem;
        }

        .user-name {
            font-weight: 600;
            margin-bottom: 0.3rem;
        }

        .user-email {
            font-size: 0.8rem;
            opacity: 0.7;
        }

        .logout-btn {
            width: 100%;
            background: transparent;
            border: 1px solid rgba(244, 162, 97, 0.3);
            color: #f4a261;
            padding: 0.8rem;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
        }

        .logout-btn:hover {
            background: rgba(244, 162, 97, 0.1);
        }

        /* Main Content */
        .main-content {
            margin-left: 280px;
            padding: 2rem;
            min-height: 100vh;
        }

        .main-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid rgba(244, 162, 97, 0.2);
        }

        .header-left h1 {
            font-size: 2.5rem;
            font-weight: 300;
            color: white;
            margin-bottom: 0.5rem;
        }

        .header-left p {
            color: #ccc;
            opacity: 0.8;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .dashboard-layout {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                position: relative;
                width: 100%;
                height: auto;
                border-right: none;
                border-bottom: 1px solid rgba(244, 162, 97, 0.2);
            }
            
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }
            
            .sidebar-footer {
                position: static;
                margin-top: 2rem;
            }
            
            .main-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
        }

        /* Shared Admin Styles */
        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #f4a261, #e76f51);
            color: #141414;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(244, 162, 97, 0.3);
        }

        .btn-secondary {
            background: transparent;
            color: #f4a261;
            border: 1px solid rgba(244, 162, 97, 0.3);
        }

        .btn-secondary:hover {
            background: rgba(244, 162, 97, 0.1);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .status-message {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            text-align: center;
        }

        .status-success {
            background: rgba(46, 204, 113, 0.1);
            color: #2ecc71;
            border: 1px solid rgba(46, 204, 113, 0.3);
        }

        .status-error {
            background: rgba(231, 76, 60, 0.1);
            color: #e74c3c;
            border: 1px solid rgba(231, 76, 60, 0.3);
        }

        .status-info {
            background: rgba(52, 152, 219, 0.1);
            color: #3498db;
            border: 1px solid rgba(52, 152, 219, 0.3);
        }

        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 3rem;
            color: #f4a261;
        }

        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #f4a261;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s ease-in-out infinite;
            margin-right: 0.5rem;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="dashboard-layout">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h1 class="sidebar-title">El Palleter</h1>
                <p class="sidebar-subtitle">Panel de Administraci√≥n</p>
            </div>
            
            <nav>
                <ul class="sidebar-nav">
                    <li class="nav-item">
                        <a href="/administracion/dashboard" class={`nav-link ${activeSection === 'dashboard' ? 'active' : ''}`}>
                            <span class="nav-icon">üìä</span>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/administracion/dashboard/carta" class={`nav-link ${activeSection === 'carta' ? 'active' : ''}`}>
                            <span class="nav-icon">üçΩÔ∏è</span>
                            Carta
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/administracion/dashboard/historia" class={`nav-link ${activeSection === 'historia' ? 'active' : ''}`}>
                            <span class="nav-icon">üìñ</span>
                            Historia
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/administracion/dashboard/contacto" class={`nav-link ${activeSection === 'contacto' ? 'active' : ''}`}>
                            <span class="nav-icon">üìû</span>
                            Contacto
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/administracion/dashboard/configuracion" class={`nav-link ${activeSection === 'configuracion' ? 'active' : ''}`}>
                            <span class="nav-icon">‚öôÔ∏è</span>
                            Configuraci√≥n
                        </a>
                    </li>
                </ul>
            </nav>
            
            <div class="sidebar-footer">
                <div class="user-info" id="userInfo">
                    <div class="loading">
                        <span class="spinner"></span>
                        Cargando...
                    </div>
                </div>
                <button class="logout-btn" id="logoutBtn">Cerrar Sesi√≥n</button>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="main-header">
                <div class="header-left">
                    <h1>{title}</h1>
                    {description && <p>{description}</p>}
                </div>
                <div class="header-actions">
                    <slot name="header-actions" />
                </div>
            </div>

            <div id="statusMessage" style="display: none;"></div>

            <slot />
        </main>
    </div>

    <script>
        // Scripts compartidos para el admin
        document.addEventListener('DOMContentLoaded', async () => {
            await loadUserInfo();
            setupLogout();
        });

        async function loadUserInfo() {
            try {
                const response = await fetch('/api/auth/verify');
                const data = await response.json();
                
                const userInfoElement = document.getElementById('userInfo');
                
                if (data.authenticated) {
                    userInfoElement.innerHTML = `
                        <div class="user-name">${data.user.name}</div>
                        <div class="user-email">${data.user.email}</div>
                    `;
                } else {
                    window.location.href = '/administracion';
                }
            } catch (error) {
                console.error('Error loading user info:', error);
                window.location.href = '/administracion';
            }
        }

        function setupLogout() {
            document.getElementById('logoutBtn').addEventListener('click', async () => {
                try {
                    await fetch('/api/auth/logout', { method: 'POST' });
                    window.location.href = '/administracion';
                } catch (error) {
                    console.error('Logout error:', error);
                    window.location.href = '/administracion';
                }
            });
        }

        // Funci√≥n global para mostrar mensajes de estado
        window.showStatus = function(message, type) {
            const statusEl = document.getElementById('statusMessage');
            statusEl.className = `status-message status-${type}`;
            statusEl.textContent = message;
            statusEl.style.display = 'block';
            
            if (type === 'success') {
                setTimeout(() => {
                    statusEl.style.display = 'none';
                }, 5000);
            }
        };

        // Funci√≥n global para hacer requests autenticados
        window.adminFetch = async function(url, options = {}) {
            const defaultOptions = {
                headers: {
                    'Content-Type': 'application/json',
                    ...options.headers
                },
                ...options
            };

            const response = await fetch(url, defaultOptions);
            
            if (response.status === 401) {
                window.location.href = '/administracion';
                return null;
            }

            return response;
        };
    </script>
</body>
</html>
