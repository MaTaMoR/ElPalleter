---
export const prerender = true;

import ResponsiveImage from './ResponsiveImage.astro';

interface Props {
    imageId: string;
    alt?: string;
    className?: string;
    overlayColor?: string;
    overlayOpacity?: number;
    fallbackImage?: string;
    adaptiveOverlay?: boolean; // Nueva prop para habilitar overlay adaptativo
}

const {
    imageId,
    alt = "Fondo Hero",
    className = '',
    overlayColor = 'rgba(0, 0, 0, 0.25)',
    overlayOpacity = 1,
    adaptiveOverlay = true // Por defecto habilitado
} = Astro.props;

// Clases dinámicas
const heroClasses = [
    'hero-background',
    adaptiveOverlay && 'adaptive-overlay',
    className
].filter(Boolean).join(' ');
---

<div class={heroClasses} id="hero">
    <!-- Imagen de fondo responsiva -->
    <ResponsiveImage
        imageId={imageId}
        alt={alt}
        className="hero-bg-image"
        loading="eager"
        decoding="async"
        sizes="100vw"
        objectFit="cover"
        objectPosition="center"
        priority={true}
        fallbackText="Imagen de fondo no disponible"
        fallbackIcon="picture"
    />
    
    <!-- Overlay adaptativo por tema -->
    {adaptiveOverlay && (
        <div class="hero-overlay-adaptive"></div>
    )}
    
    <!-- Slot para contenido del hero -->
    <div class="hero-content">
        <slot />
    </div>
</div>

<style>
    /* === HERO BACKGROUND USANDO DESIGN TOKENS === */
    .hero-background {
        position: relative;
        width: 100%;
        height: 100vh;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        color: var(--text-primary);
        
        /* Optimizaciones de performance usando tokens */
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        contain: layout style;
    }

    /* === IMAGEN DE FONDO === */
    .hero-background :global(.hero-bg-image) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        object-fit: cover;
        object-position: center;
        
        /* Optimización de GPU usando tokens */
        will-change: transform;
        transform: translate3d(0, 0, 0);
        
        /* Transición suave para filtros si se necesitan */
        transition: filter var(--duration-300) var(--ease-out);
    }

    /* === OVERLAY ORIGINAL === */
    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        pointer-events: none;
        background: var(--bg-overlay);
    }

    /* === OVERLAY ADAPTATIVO POR TEMA === */
    .hero-overlay-adaptive {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 2;
        pointer-events: none;
        transition: background var(--duration-300) var(--ease-out),
                    opacity var(--duration-300) var(--ease-out);
        
        /* Por defecto (tema oscuro) - overlay muy sutil */
        background: rgba(0, 0, 0, 0.1);
        opacity: 1;
    }

    /* Overlay para tema claro - sutil pero efectivo */
    :root[data-theme="light"] .hero-overlay-adaptive,
    html[data-theme="light"] .hero-overlay-adaptive {
        background: linear-gradient(
            rgba(255, 255, 255, 0.35) 0%,
            rgba(248, 249, 250, 0.4) 25%,
            rgba(241, 243, 244, 0.45) 50%,
            rgba(255, 255, 255, 0.5) 100%
        );
    }

    /* === VARIANTE: Sin overlay base cuando se usa adaptativo === */
    .hero-background.adaptive-overlay .hero-overlay {
        opacity: 0.3; /* Reducir overlay base cuando se usa adaptativo */
    }

    /* === FALLBACK PERSONALIZADO PARA HERO === */
    .hero-background :global(.responsive-image-fallback) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        
        /* Usando tokens para el fondo de fallback */
        background: linear-gradient(135deg, 
            var(--dark-600) 0%, 
            var(--dark-400) 100%
        );
        border: none;
        border-radius: 0;
        color: var(--text-secondary);
        min-height: 100vh;
    }

    .hero-background :global(.responsive-image-fallback .fallback-icon) {
        color: var(--text-muted);
    }

    .hero-background :global(.responsive-image-fallback .fallback-title) {
        color: var(--text-primary);
    }

    /* === CONTENIDO === */
    .hero-content {
        position: relative;
        z-index: 3; /* Por encima de ambos overlays */
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
    }

    /* === VARIANTES ADICIONALES DEL OVERLAY === */
    
    /* Overlay adaptativo suave (menos contraste) */
    .hero-background.adaptive-soft .hero-overlay-adaptive {
        background: rgba(0, 0, 0, 0.05);
    }
    
    :root[data-theme="light"] .hero-background.adaptive-soft .hero-overlay-adaptive,
    html[data-theme="light"] .hero-background.adaptive-soft .hero-overlay-adaptive {
        background: linear-gradient(
            rgba(255, 255, 255, 0.25) 0%,
            rgba(248, 249, 250, 0.3) 50%,
            rgba(255, 255, 255, 0.35) 100%
        );
    }

    /* Overlay adaptativo fuerte (más contraste) */
    .hero-background.adaptive-strong .hero-overlay-adaptive {
        background: rgba(0, 0, 0, 0.2);
    }
    
    :root[data-theme="light"] .hero-background.adaptive-strong .hero-overlay-adaptive,
    html[data-theme="light"] .hero-background.adaptive-strong .hero-overlay-adaptive {
        background: linear-gradient(
            rgba(255, 255, 255, 0.6) 0%,
            rgba(248, 249, 250, 0.65) 25%,
            rgba(241, 243, 244, 0.7) 75%,
            rgba(255, 255, 255, 0.75) 100%
        );
    }

    /* === VARIANTES ESPECIALES === */
    
    /* Overlay con efecto cristal */
    .hero-background.glass-adaptive .hero-overlay-adaptive {
        backdrop-filter: var(--backdrop-blur);
        background: var(--glass-bg);
    }
    
    :root[data-theme="light"] .hero-background.glass-adaptive .hero-overlay-adaptive,
    html[data-theme="light"] .hero-background.glass-adaptive .hero-overlay-adaptive {
        background: rgba(255, 255, 255, 0.6);
        backdrop-filter: blur(20px) saturate(180%);
    }

    /* Gradiente vertical adaptativo */
    .hero-background.gradient-adaptive .hero-overlay-adaptive {
        background: linear-gradient(
            180deg,
            transparent 0%,
            rgba(0, 0, 0, 0.1) 30%,
            rgba(0, 0, 0, 0.3) 70%,
            rgba(0, 0, 0, 0.5) 100%
        );
    }
    
    :root[data-theme="light"] .hero-background.gradient-adaptive .hero-overlay-adaptive,
    html[data-theme="light"] .hero-background.gradient-adaptive .hero-overlay-adaptive {
        background: linear-gradient(
            180deg,
            rgba(255, 255, 255, 0.6) 0%,
            rgba(255, 255, 255, 0.7) 30%,
            rgba(248, 249, 250, 0.8) 70%,
            rgba(255, 255, 255, 0.9) 100%
        );
    }

    /* === RESPONSIVE === */
    
    /* Mobile optimizations */
    @media (max-width: 768px) {
        .hero-background {
            height: 100svh;
        }
        
        /* Overlay más fuerte en móvil para mejor legibilidad */
        .hero-overlay-adaptive {
            background: rgba(0, 0, 0, 0.15);
        }
        
        :root[data-theme="light"] .hero-overlay-adaptive,
        html[data-theme="light"] .hero-overlay-adaptive {
            background: linear-gradient(
                rgba(255, 255, 255, 0.45) 0%,
                rgba(248, 249, 250, 0.5) 50%,
                rgba(255, 255, 255, 0.55) 100%
            );
        }
        
        .hero-background :global(.responsive-image-fallback .fallback-content) {
            padding: var(--space-8) var(--space-4);
        }
    }

    /* Tablet adjustments */
    @media (min-width: 768px) and (max-width: 1023px) {
        .hero-background :global(.responsive-image-fallback .fallback-content) {
            padding: var(--space-12) var(--space-6);
        }
    }

    /* Desktop optimizations */
    @media (min-width: 1024px) {
        .hero-background :global(.responsive-image-fallback .fallback-content) {
            padding: var(--space-16) var(--space-8);
        }
    }

    /* === TEMAS ESPECÍFICOS PARA FALLBACK === */
    
    [data-theme="light"] .hero-background :global(.responsive-image-fallback) {
        background: linear-gradient(135deg, 
            var(--gray-100) 0%, 
            var(--gray-300) 100%
        );
        color: var(--text-primary);
    }

    /* === ANIMACIONES === */
    
    /* Fade in del hero */
    .hero-background.animate-in {
        animation: heroFadeIn var(--duration-1000) var(--ease-out);
    }
    
    @keyframes heroFadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    /* === ACCESIBILIDAD === */
    
    /* Alto contraste */
    @media (prefers-contrast: high) {
        .hero-overlay-adaptive {
            background: rgba(0, 0, 0, 0.7) !important;
        }
        
        :root[data-theme="light"] .hero-overlay-adaptive,
        html[data-theme="light"] .hero-overlay-adaptive {
            background: rgba(255, 255, 255, 0.9) !important;
        }
    }

    /* Movimiento reducido */
    @media (prefers-reduced-motion: reduce) {
        .hero-overlay-adaptive {
            transition: none;
        }
        
        .hero-background.animate-in {
            animation: none;
        }
    }

    /* === OPTIMIZACIONES DE PERFORMANCE === */
    
    .hero-background {
        contain: layout style paint;
    }
    
    .hero-background.isolated {
        isolation: isolate;
    }

    /* === UTILIDADES DE DEBUG === */
    
    /* Para desarrollo - mostrar límites de overlays */
    .hero-background.debug-overlays .hero-overlay {
        border: 2px solid red;
        opacity: 0.5;
    }
    
    .hero-background.debug-overlays .hero-overlay-adaptive {
        border: 2px solid blue;
        opacity: 0.5;
    }
</style>