---
export const prerender = true;

import Text from '../../components/i18n/Text.astro';
import cartaData from '../../data/carta-data.json';
import { i18nCore } from '../../i18n/core.js';
---

<section class="carta-section container" id="carta">
    <div class="carta-container">
        <div class="carta-header">
            <h2 class="carta-title">
                <Text key="carta.title" fallback="Carta" />
            </h2>
            <p class="carta-subtitle">
                <Text key="carta.subtitle" fallback="Auténtica cocina mediterránea desde 1985" />
            </p>
        </div>

        <div class="menu-nav">
            {cartaData.categories.map((category, index) => (
                <button 
                    class={`menu-nav-btn ${index === 0 ? 'active' : ''}`} 
                    data-category={category.id}
                >
                    <Text key={category.nameKey} fallback={category.id} />
                </button>
            ))}
        </div>

        <div class="menu-content">
            {cartaData.categories.map((category, categoryIndex) => (
                <div 
                    class={`menu-section ${categoryIndex === 0 ? 'active' : ''}`} 
                    id={category.id}
                >
                    {category.subcategories.map((subcategory) => (
                        <div class="menu-category">
                            <h3 class="category-title">
                                <Text key={subcategory.nameKey} fallback={subcategory.id} />
                            </h3>
                            
                            {subcategory.items.map((item) => (
                                <div class="menu-item">
                                    <div class="item-info">
                                        <div class="item-name">
                                            <Text key={item.nameKey} fallback={item.id} />
                                        </div>
                                        {item.descriptionKey && (
                                            <div class="item-description">
                                                <Text key={item.descriptionKey} fallback="" />
                                            </div>
                                        )}
                                    </div>
                                    <div class="item-price">
                                        {i18nCore.formatCurrency(item.price)}
                                    </div>
                                </div>
                            ))}
                        </div>
                    ))}
                </div>
            ))}
        </div>
    </div>
</section>

<style>
    .carta-section {
        min-height: 90svh;
        position: relative;
    }

    .carta-container {
        z-index: 2;
        position: relative;
    }

    .carta-header {
        text-align: center;
        margin-bottom: calc(var(--gap-mobile) * 3);
    }

    .carta-title {
        font-size: clamp(var(--text-3xl), 4vw, var(--text-5xl));
        color: var(--accent-primary);
        margin-bottom: var(--gap-mobile);
        letter-spacing: var(--tracking-wide);
        transition: var(--transition-colors);
        font-weight: var(--font-bold);
    }

    .carta-subtitle {
        font-size: var(--text-lg);
        color: var(--text-secondary);
        opacity: 0.8;
        transition: var(--transition-colors);
        font-weight: var(--font-semibold);
    }

    .menu-nav {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: calc(var(--gap-mobile) * 0.5);
        margin-bottom: calc(var(--gap-mobile) * 2.5);
    }

    .menu-nav-btn {
        background: transparent;
        border: var(--border-2) solid var(--glass-border);
        color: var(--text-primary);
        padding: calc(var(--padding-mobile) * 0.6) var(--padding-mobile);
        border-radius: var(--radius-3xl);
        cursor: pointer;
        transition: var(--transition-base);
        font-weight: var(--font-semibold);
        letter-spacing: var(--tracking-normal);
        text-transform: uppercase;
        font-size: var(--text-sm);
    }

    .menu-nav-btn:hover,
    .menu-nav-btn.active {
        background: var(--accent-primary);
        color: var(--bg-primary);
        border-color: var(--accent-primary);
        transform: translateY(-2px);
    }

    .menu-nav-btn:focus-visible {
        outline: var(--border-2) solid var(--focus-ring);
        outline-offset: var(--space-1);
    }

    .menu-content {
        display: grid;
        grid-template-columns: 1fr;
        gap: var(--gap-mobile);
        margin-bottom: var(--gap-mobile);
        overflow: hidden;
    }

    .menu-category {
        background: var(--glass-bg);
        backdrop-filter: var(--backdrop-blur);
        border-radius: var(--radius-xl);
        border: var(--border-1) solid var(--glass-border);
        padding: calc(var(--padding-mobile) * 1.5);
        margin-bottom: calc(var(--gap-mobile) * 1.5);
        transition: var(--transition-base);
    }

    .menu-category:last-child {
        margin-bottom: 0;
    }

    .category-title {
        font-size: var(--text-xl);
        color: var(--accent-primary);
        font-weight: var(--font-semibold);
        text-align: center;
        border-bottom: var(--border-2) solid var(--accent-medium);
        margin-bottom: calc(var(--gap-mobile) * 0.75);
        padding-bottom: calc(var(--padding-mobile) * 0.25);
        transition: var(--transition-colors);
    }

    .menu-item {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        border-bottom: var(--border-1) solid var(--border-primary);
        margin-bottom: calc(var(--gap-mobile) * 0.6);
        padding-bottom: calc(var(--padding-mobile) * 0.4);
        transition: var(--transition-colors);
    }

    .menu-item:last-child {
        border-bottom: none;
        margin-bottom: 0;
    }

    .item-info {
        flex: 1;
        padding-right: var(--padding-mobile);
    }

    .item-name {
        font-weight: var(--font-semibold);
        color: var(--text-primary);
        margin-bottom: calc(var(--gap-mobile) * 0.15);
        font-size: var(--text-sm);
        transition: var(--transition-colors);
    }

    .item-description {
        font-size: var(--text-xs);
        color: var(--text-secondary);
        opacity: 0.8;
        line-height: var(--leading-normal);
        transition: var(--transition-colors);
    }

    .item-price {
        color: var(--accent-primary);
        font-weight: var(--font-bold);
        font-size: var(--text-base);
        white-space: nowrap;
        transition: var(--transition-colors);
    }

    .menu-section {
        display: none;
    }

    .menu-section.active {
        display: grid;
    }

    @media (min-width: 768px) {
        .carta-header {
            margin-bottom: calc(var(--gap-tablet) * 2);
        }

        .carta-title {
            font-size: clamp(var(--text-4xl), 4vw, var(--text-5xl));
            margin-bottom: var(--gap-tablet);
        }

        .carta-subtitle {
            font-size: var(--text-xl);
        }

        .menu-nav {
            gap: var(--gap-tablet);
            margin-bottom: var(--gap-tablet);
        }

        .menu-nav-btn {
            padding: calc(var(--padding-tablet) * 0.4) calc(var(--padding-tablet) * 0.75);
            font-size: var(--text-base);
        }

        .menu-content {
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: var(--gap-tablet);
            margin-bottom: var(--gap-tablet);
        }

        .menu-category {
            padding: var(--padding-tablet);
            margin-bottom: var(--gap-tablet);
        }

        .category-title {
            font-size: var(--text-2xl);
            margin-bottom: var(--gap-tablet);
            padding-bottom: calc(var(--padding-tablet) * 0.25);
        }

        .menu-item {
            margin-bottom: calc(var(--gap-tablet) * 0.6);
            padding-bottom: calc(var(--padding-tablet) * 0.4);
        }

        .item-info {
            padding-right: var(--padding-tablet);
        }

        .item-name {
            margin-bottom: calc(var(--gap-tablet) * 0.15);
            font-size: var(--text-base);
        }

        .item-description {
            font-size: var(--text-sm);
        }

        .item-price {
            font-size: var(--text-lg);
        }
    }

    @media (min-width: 1024px) {
        .carta-header {
            margin-bottom: calc(var(--gap-desktop) * 1.33);
        }

        .carta-title {
            margin-bottom: var(--gap-desktop);
        }

        .menu-nav {
            gap: var(--gap-desktop);
            margin-bottom: var(--gap-desktop);
        }

        .menu-nav-btn {
            padding: calc(var(--padding-desktop) * 0.27) calc(var(--padding-desktop) * 0.5);
        }

        .menu-content {
            gap: var(--gap-desktop);
            margin-bottom: var(--gap-desktop);
        }

        .menu-category {
            padding: calc(var(--padding-desktop) * 0.67);
            margin-bottom: calc(var(--gap-desktop) * 0.67);
        }

        .category-title {
            margin-bottom: calc(var(--gap-desktop) * 0.5);
            padding-bottom: calc(var(--padding-desktop) * 0.17);
        }

        .menu-item {
            margin-bottom: calc(var(--gap-desktop) * 0.4);
            padding-bottom: calc(var(--padding-desktop) * 0.27);
        }

        .item-info {
            padding-right: var(--padding-desktop);
        }

        .item-name {
            margin-bottom: calc(var(--gap-desktop) * 0.1);
        }
    }

    @media (min-width: 1400px) {
        .carta-header {
            margin-bottom: var(--gap-desktop-lg);
        }

        .carta-title {
            margin-bottom: var(--gap-desktop-lg);
        }

        .menu-nav {
            gap: var(--gap-desktop-lg);
            margin-bottom: var(--gap-desktop-lg);
        }

        .menu-content {
            gap: var(--gap-desktop-lg);
            margin-bottom: var(--gap-desktop-lg);
        }
    }

    @media (max-width: 420px) {
        .carta-header {
            margin-bottom: calc(var(--gap-mobile) * 2);
        }

        .carta-title {
            font-size: clamp(var(--text-2xl), 4vw, var(--text-4xl));
            margin-bottom: calc(var(--gap-mobile) * 0.75);
        }

        .carta-subtitle {
            font-size: var(--text-base);
        }

        .menu-nav {
            gap: calc(var(--gap-mobile) * 0.5);
            margin-bottom: calc(var(--gap-mobile) * 2);
        }

        .menu-nav-btn {
            padding: calc(var(--padding-mobile) * 0.5) calc(var(--padding-mobile) * 0.8);
            font-size: var(--text-xs);
        }

        .menu-content {
            gap: calc(var(--gap-mobile) * 0.75);
            margin-bottom: calc(var(--gap-mobile) * 0.75);
        }

        .menu-category {
            padding: var(--padding-mobile);
            margin-bottom: var(--gap-mobile);
        }

        .category-title {
            font-size: var(--text-lg);
            margin-bottom: calc(var(--gap-mobile) * 0.5);
        }

        .menu-item {
            margin-bottom: calc(var(--gap-mobile) * 0.4);
        }

        .item-name {
            font-size: var(--text-sm);
        }

        .item-description {
            font-size: var(--text-xs);
        }

        .item-price {
            font-size: var(--text-sm);
        }
    }

    @media (prefers-reduced-motion: reduce) {
        .menu-nav-btn,
        .menu-category,
        .carta-title,
        .carta-subtitle,
        .category-title,
        .item-name,
        .item-description,
        .item-price,
        .menu-item {
            transition: none;
        }
        
        .menu-nav-btn:hover,
        .menu-nav-btn.active {
            transform: none;
        }
    }

    @media (prefers-contrast: high) {
        .menu-nav-btn {
            border-width: var(--border-4);
        }
        
        .menu-category {
            border: var(--border-2) solid var(--glass-border);
            background: var(--bg-surface);
        }
        
        .category-title {
            border-bottom-width: var(--border-4);
        }
    }

    .menu-content {
        contain: layout style;
    }

    .menu-category {
        contain: layout style paint;
    }
</style>

<script>
    import { useBreakpoints, disableTransitionsDuringResize } from '../../utils/breakpoints.js';
    
    document.addEventListener('DOMContentLoaded', () => {
        const navButtons = document.querySelectorAll('.menu-nav-btn');
        const menuSections = document.querySelectorAll('.menu-section');
        const cartaSection = document.querySelector('.carta-section');
        const menuCategories = document.querySelectorAll('.menu-category');
        
        const breakpoints = useBreakpoints('carta-component', {
            element: cartaSection
        });
        
        breakpoints.subscribe({
            onBreakpointChange: (newBreakpoint, oldBreakpoint) => {
                console.log(`Carta: Breakpoint changed ${oldBreakpoint} → ${newBreakpoint}`);
                
                const elementsToAdjust = [...menuCategories];
                disableTransitionsDuringResize(elementsToAdjust);
            }
        });

        navButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                navButtons.forEach(b => b.classList.remove('active'));
                btn.classList.add('active');

                menuSections.forEach(section => section.classList.remove('active'));

                const targetCategory = btn.getAttribute('data-category');
                const targetSection = document.getElementById(targetCategory);
                if (targetSection) {
                    targetSection.classList.add('active');
                }
            });
        });
        
        window.addEventListener('beforeunload', () => {
            breakpoints.unsubscribe();
        });
    });
</script>