---
import ImageSlider from './ImageSlider.astro';
import RichText from '../i18n/RichText.astro';
import { getGalleryImages } from '../../utils/imageUtils.js';

// Obtener las im√°genes del slider de historia con traducciones
const imagesToShow = getGalleryImages('historia_slider', Astro);
---

<section class="historia-section" id="historia">
    <div class="historia-container container">
        <!-- Historia a la izquierda -->
        <div class="history-content">
            <RichText 
                key="historia_content" 
                fallback={'Historia no disponible'}
                className="historia-rich-content"
                theme="gold"
            />
        </div>
    
        <!-- Slider de fotos a la derecha -->
        <div class="slider-section">
            <ImageSlider images={imagesToShow} />
        </div>
    </div>
</section>

<style>
    /* === BASE SECTION === */
    .historia-section {
        width: 100%;
        min-height: 900px;
        max-height: 1000px;
        background: rgb(20, 20, 20);
        padding: 120px 0;
        display: flex;
        align-items: stretch;
        position: relative;
        overflow: hidden;
        box-sizing: border-box;
    }

    /* Efecto de part√≠culas animadas en el fondo */
    .historia-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: radial-gradient(circle at 25% 25%, #f4a261 1px, transparent 1px),
                          radial-gradient(circle at 75% 75%, #f4a261 1px, transparent 1px),
                          radial-gradient(circle at 40% 80%, #f4a261 1px, transparent 1px),
                          radial-gradient(circle at 80% 20%, #f4a261 1px, transparent 1px),
                          radial-gradient(circle at 15% 60%, #f4a261 1px, transparent 1px);
        background-size: 120px 120px, 150px 150px, 100px 100px, 180px 180px, 90px 90px;
        opacity: 0.15;
        animation: float 25s ease-in-out infinite;
        z-index: 1;
    }

    @keyframes float {
        0%, 100% { 
            transform: translateY(0px) translateX(0px); 
        }
        25% { 
            transform: translateY(-15px) translateX(5px); 
        }
        50% { 
            transform: translateY(-25px) translateX(-10px); 
        }
        75% { 
            transform: translateY(-10px) translateX(8px); 
        }
    }

    /* === CONTAINER USANDO SISTEMA GLOBAL === */
    .historia-container {
        height: 660px;
        display: flex;
        flex-direction: row;
        gap: var(--gap-mobile);
        position: relative;
        z-index: 2;
    }

    /* === CONTENT SECTIONS BASE === */
    .history-content {
        flex: 1.2;
        padding: var(--padding-mobile);
        display: flex;
        flex-direction: column;
        justify-content: center;
        background: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(15px);
        -webkit-backdrop-filter: blur(15px);
        border-radius: 20px;
        border: 1px solid rgba(244, 162, 97, 0.2);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        height: 100%;
        
        /* SISTEMA DE ANIMACI√ìN UNIFICADO */
        opacity: 0;
        transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .slider-section {
        flex: 1.3;
        height: 100%;
        display: grid;
        place-items: center;
        background: rgba(0, 0, 0, 0.4);
        border-radius: 20px;
        border: 1px solid rgba(244, 162, 97, 0.15);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        
        /* SISTEMA DE ANIMACI√ìN UNIFICADO */
        opacity: 0;
        transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* === ANIMACIONES ACTIVAS BASE === */
    .history-content.slide-in-active {
        opacity: 1;
    }

    .slider-section.slide-in-active {
        opacity: 1;
        transition-delay: 0.2s;
    }

    /* === BREAKPOINTS USANDO SISTEMA GLOBAL === */
    
    /* TABLET Y SUPERIOR (768px+) - Animaci√≥n horizontal */
    @media (min-width: 768px) {
        .historia-container {
            gap: var(--gap-tablet);
        }
        
        .history-content {
            padding: var(--padding-tablet);
        }
        
        .history-content:not(.slide-in-active) {
            transform: translateX(-60px);
            transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), 
                       transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .slider-section:not(.slide-in-active) {
            transform: translateX(60px);
            transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), 
                       transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .history-content.slide-in-active {
            opacity: 1;
            transform: translateX(0);
        }

        .slider-section.slide-in-active {
            opacity: 1;
            transform: translateX(0);
            transition-delay: 0.2s;
        }
    }

    /* DESKTOP (1024px+) */
    @media (min-width: 1024px) {
        .historia-container {
            gap: var(--gap-desktop);
        }
        
        .history-content {
            padding: var(--padding-desktop);
        }
    }

    /* DESKTOP LARGE (1400px+) */
    @media (min-width: 1400px) {
        .historia-container {
            gap: var(--gap-desktop-lg);
        }
    }

    /* TABLET ESPEC√çFICO (768px-1023px) */
    @media (min-width: 768px) and (max-width: 1023px) {
        .historia-section {
            min-height: 800px;
            max-height: 900px;
            padding: 100px 0;
        }
        
        .historia-container {
            height: 600px;
        }
    }

    /* MOBILE (0-767px) - Animaci√≥n vertical */
    @media (max-width: 767px) {
        .historia-section {
            min-height: auto;
            max-height: none;
            padding: 120px 0 40px 0;
            display: block;
            align-items: unset;
        }
        
        .historia-container {
            flex-direction: column;
            height: auto;
            gap: var(--gap-mobile);
        }
        
        .history-content {
            order: 2;
            padding: var(--padding-mobile);
            height: auto;
        }
        
        .slider-section {
            order: 1;
            min-height: 60vh;
            height: 60vh;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 15px;
            border: 1px solid rgba(244, 162, 97, 0.2);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }
        
        /* Animaciones m√≥vil */
        .slider-section:not(.slide-in-active) {
            transform: translateY(-30px);
            transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), 
                       transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .history-content:not(.slide-in-active) {
            transform: translateY(30px);
            transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), 
                       transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .slider-section.slide-in-active {
            opacity: 1;
            transform: translateY(0);
            transition-delay: 0.1s;
        }
        
        .history-content.slide-in-active {
            opacity: 1;
            transform: translateY(0);
            transition-delay: 0.3s;
        }
        
        /* Part√≠culas m√°s sutiles en m√≥vil */
        .historia-section::before {
            opacity: 0.08;
            animation-duration: 30s;
        }
    }

    /* MOBILE PEQUE√ëO (0-420px) */
    @media (max-width: 420px) {
        .historia-section {
            padding: 100px 0 30px 0;
        }
        
        .historia-container {
            gap: calc(var(--gap-mobile) * 0.75);
        }
        
        .slider-section {
            min-height: 50vh;
            height: 50vh;
        }
        
        .history-content {
            border-radius: 15px;
        }
    }
</style>

<script>
    import { useBreakpoints, disableTransitionsDuringResize } from '../../utils/breakpoints.js';
    
    document.addEventListener('DOMContentLoaded', () => {
        const historyContent = document.querySelector('.history-content');
        const sliderSection = document.querySelector('.slider-section');
        
        // Usar el sistema centralizado de breakpoints
        const breakpoints = useBreakpoints('historia-component', {
            element: document.querySelector('.historia-section')
        });
        
        // Observer para animaciones de entrada
        const observerOptions = {
            threshold: 0.15,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('slide-in-active');
                }
            });
        }, observerOptions);

        if (historyContent) observer.observe(historyContent);
        if (sliderSection) observer.observe(sliderSection);
        
        // Suscribirse a cambios de breakpoint
        breakpoints.subscribe({
            onBreakpointChange: (newBreakpoint, oldBreakpoint) => {
                console.log(`Historia: Breakpoint changed ${oldBreakpoint} ‚Üí ${newBreakpoint}`);
                
                // Deshabilitar transiciones temporalmente durante el cambio
                const elementsToAdjust = [historyContent, sliderSection].filter(Boolean);
                disableTransitionsDuringResize(elementsToAdjust);
            },
            
            onResize: (currentBreakpoint) => {
                // L√≥gica adicional espec√≠fica para historia si es necesaria
                // console.log(`üîÑ Historia: Resize en breakpoint ${currentBreakpoint}`);
            }
        });
        
        // Cleanup al descargar la p√°gina
        window.addEventListener('beforeunload', () => {
            breakpoints.unsubscribe();
            observer.disconnect();
        });
    });
</script>