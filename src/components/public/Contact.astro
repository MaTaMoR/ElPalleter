---
export const prerender = true;

import Text from "../i18n/Text.astro";
import contactData from "../../data/contact-data.json";
import { i18nCore } from "../../i18n/core.js";
import { ContactService } from "../../services/ContactService.js";

// Obtener información de i18n
const { locale } = i18nCore.getI18nInfo(Astro);

// Obtener datos del servicio actualizado
const contactServiceData = ContactService.getContactDataWithTranslations(
    i18nCore,
    locale,
);
const currentStatus = contactServiceData.status;
const socialNetworks = contactServiceData.socials;
const groupedSchedule = ContactService.getGroupedSchedule(locale);
---

<section class="contact-section container" id="contacto">
    <div class="contact-header">
        <h2 class="contact-title">
            <Text key="contact.title" fallback="Contacto" />
        </h2>
        <p class="contact-subtitle">
            <Text
                key="contact.subtitle"
                fallback="Donde estamos y como contactarnos"
            />
        </p>
    </div>
    <div class="contact-container">
        <div class="contact-component">
            <div class="top-bar">
                <div
                    class={`status status-${currentStatus.status}`}
                    id="restaurantStatus"
                >
                    <div class="status-dot"></div>
                    <span id="statusText" class="status-message">
                        {currentStatus.fullMessage || "No Disponible"}
                    </span>
                </div>
            </div>

            <div class="contact-content">
                <div class="contact-grid">
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.address"
                                fallback="Dirección"
                            />
                        </h4>
                        <p>{contactData.contact.address.street}</p>
                        <p>
                            {contactData.contact.address.postalCode}
                            {contactData.contact.address.city}
                        </p>
                        <p>
                            {contactData.contact.address.province}, {
                                contactData.contact.address.country
                            }
                        </p>
                    </div>

                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.phone"
                                fallback="Contacto"
                            />
                        </h4>
                        <p>
                            <strong
                                ><Text
                                    key="contact.fields.phone"
                                    fallback="Teléfono"
                                />:</strong
                            >
                            <a href={`tel:${contactData.contact.phone.main}`}
                                >{contactData.contact.phone.main}</a
                            >
                        </p>
                        <p>
                            <strong
                                ><Text
                                    key="contact.fields.email"
                                    fallback="Email"
                                />:</strong
                            >
                            <a href={`mailto:${contactData.contact.email.main}`}
                                >{contactData.contact.email.main}</a
                            >
                        </p>
                    </div>

                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.hours"
                                fallback="Horarios"
                            />
                        </h4>
                        {
                            groupedSchedule.map((group) => (
                                <div class="schedule-group">
                                    <p class="schedule-days">
                                        <strong>{group.daysDisplay}:</strong>
                                    </p>
                                    {group.closed ? (
                                        <p class="schedule-closed">
                                            <Text
                                                key="contact.status.states.closed"
                                                fallback="Cerrado"
                                            />
                                        </p>
                                    ) : (
                                        <div class="schedule-ranges">
                                            {group.ranges.map((range) => (
                                                <p class="schedule-range">
                                                    {range.translatedName && (
                                                        <span class="range-name">
                                                            {
                                                                range.translatedName
                                                            }
                                                            :{" "}
                                                        </span>
                                                    )}
                                                    <span class="range-time">
                                                        {range.start} -{" "}
                                                        {range.end}
                                                    </span>
                                                </p>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            ))
                        }
                    </div>
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.social"
                                fallback="Síguenos"
                            />
                        </h4>
                        <p>
                            <Text
                                key="contact.values.followUs"
                                fallback="Mantente al día con nuestras novedades"
                            />
                        </p>
                        <div class="social-links">
                            {
                                socialNetworks.map((social) => (
                                    <a
                                        href={social.url}
                                        target="_blank"
                                        rel="noopener noreferrer"
                                        title={social.handle}
                                        aria-label={`<Text key="contact.accessibility.${social.key}" fallback={social.key} />`}
                                    >
                                        {social.icon}
                                    </a>
                                ))
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .contact-section {
        width: 100%;
        position: relative;
    }

    .contact-header {
        text-align: center;
        margin-bottom: calc(var(--gap-mobile) * 3);
    }

    .contact-title {
        font-size: clamp(var(--text-3xl), 4vw, var(--text-5xl));
        color: var(--accent-primary);
        margin-bottom: var(--gap-mobile);
        letter-spacing: var(--tracking-wide);
        transition: color var(--duration-300) var(--ease-out);
        font-weight: var(--font-bold);
    }

    .contact-subtitle {
        font-size: var(--text-lg);
        color: var(--text-secondary);
        opacity: 0.8;
        transition: color var(--duration-300) var(--ease-out);
        font-weight: var(--font-semibold);
    }

    .contact-container {
        position: relative;
        z-index: 2;
    }

    .contact-component {
        background: var(--glass-bg);
        backdrop-filter: var(--backdrop-blur);
        border-radius: var(--radius-2xl);
        overflow: hidden;
        border: var(--border-1) solid var(--glass-border);
        max-width: 1200px;
        margin: 0 auto;
        transition:
            background-color var(--duration-300) var(--ease-out),
            border-color var(--duration-300) var(--ease-out);
    }

    .top-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        background: var(--bg-overlay);
        padding: calc(var(--padding-mobile) * 1.25)
            calc(var(--padding-mobile) * 1.5);
        border-bottom: var(--border-1) solid var(--border-primary);
        transition:
            background-color var(--duration-300) var(--ease-out),
            border-color var(--duration-300) var(--ease-out);
    }

    .mini-brand {
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.75);
    }

    .logo-container {
        width: var(--space-12);
        height: var(--space-8);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .logo-container svg {
        width: var(--space-12);
        height: var(--space-8);
    }

    .brand-text {
        color: var(--accent-primary);
        font-size: var(--text-xl);
        font-weight: var(--font-medium);
        letter-spacing: var(--tracking-normal);
        transition: color var(--duration-300) var(--ease-out);
    }

    .status {
        background: var(--success-light);
        color: var(--success);
        padding: calc(var(--padding-mobile) * 0.5)
            calc(var(--padding-mobile) * 1);
        border-radius: var(--radius-2xl);
        font-size: var(--text-sm);
        border: var(--border-1) solid var(--success);
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.5);
        font-weight: var(--font-medium);
        transition: var(--transition-base);
    }

    .status-dot {
        width: var(--space-2);
        height: var(--space-2);
        background: var(--success);
        border-radius: var(--radius-full);
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
        100% {
            opacity: 1;
        }
    }

    .status.status-closed {
        background: var(--error-light);
        color: var(--error);
        border-color: var(--error);
    }

    .status.status-closed .status-dot {
        background: var(--error);
    }

    .status.status-closingSoon {
        background: var(--warning-light);
        color: var(--warning);
        border-color: var(--warning);
    }

    .status.status-closingSoon .status-dot {
        background: var(--warning);
    }

    .contact-content {
        padding: calc(var(--padding-mobile) * 1.5);
    }

    .contact-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: calc(var(--gap-mobile) * 1.5);
    }

    .contact-info-section {
        padding: calc(var(--padding-mobile) * 1);
        border: var(--border-1) solid transparent;
        border-radius: var(--radius-xl);
        background: var(--accent-light);
        transition:
            background-color var(--duration-300) var(--ease-out),
            border-color var(--duration-300) var(--ease-out);
    }

    .contact-info-section h4 {
        color: var(--accent-primary);
        font-size: var(--text-xl);
        margin-bottom: calc(var(--gap-mobile) * 0.8);
        border-bottom: var(--border-2) solid var(--accent-medium);
        padding-bottom: calc(var(--padding-mobile) * 0.3);
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.4);
        transition:
            color var(--duration-300) var(--ease-out),
            border-color var(--duration-300) var(--ease-out);
    }

    .contact-info-section p {
        color: var(--text-secondary);
        margin-bottom: calc(var(--gap-mobile) * 0.5);
        font-size: var(--text-base);
        line-height: var(--leading-normal);
        transition: color var(--duration-300) var(--ease-out);
    }

    .contact-info-section p:last-child {
        margin-bottom: 0;
    }

    .contact-info-section strong {
        color: var(--text-primary);
        font-weight: var(--font-semibold);
        transition: color var(--duration-300) var(--ease-out);
    }

    .contact-info-section a {
        color: var(--accent-primary);
        text-decoration: none;
        transition: var(--transition-base);
    }

    .contact-info-section a:hover {
        color: var(--accent-hover);
        text-decoration: underline;
    }

    .schedule-group {
        margin-bottom: calc(var(--gap-mobile) * 0.6);
    }

    .schedule-group:last-child {
        margin-bottom: 0;
    }

    .schedule-days {
        margin-bottom: calc(var(--gap-mobile) * 0.3) !important;
    }

    .schedule-closed {
        color: var(--error);
        font-style: italic;
        margin-bottom: calc(var(--gap-mobile) * 0.3) !important;
    }

    .schedule-ranges {
        margin-left: calc(var(--padding-mobile) * 0.8);
    }

    .schedule-range {
        margin-bottom: calc(var(--gap-mobile) * 0.15) !important;
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.3);
    }

    .range-name {
        color: var(--accent-primary);
        font-weight: var(--font-medium);
        min-width: var(--space-20);
        transition: color var(--duration-300) var(--ease-out);
    }

    .range-time {
        color: var(--text-secondary);
        transition: color var(--duration-300) var(--ease-out);
    }

    .social-links {
        display: flex;
        gap: calc(var(--gap-mobile) * 0.5);
        margin-top: calc(var(--gap-mobile) * 0.6);
    }

    .social-links a {
        background: var(--accent-light);
        color: var(--accent-primary);
        width: var(--space-10);
        height: var(--space-10);
        border-radius: var(--radius-lg);
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: var(--transition-base);
        font-size: var(--text-lg);
        border: var(--border-1) solid var(--accent-medium);
    }

    .social-links a:hover {
        background: var(--accent-medium);
        color: var(--bg-primary);
        transform: translateY(-2px);
        border-color: var(--accent-primary);
    }

    @media (max-width: 767px) {
        .contact-header {
            margin-bottom: calc(var(--gap-mobile) * 2);
        }

        .contact-title {
            font-size: clamp(var(--text-2xl), 4vw, var(--text-4xl));
            margin-bottom: calc(var(--gap-mobile) * 0.75);
        }

        .contact-subtitle {
            font-size: var(--text-base);
        }

        .top-bar {
            flex-direction: column;
            gap: calc(var(--gap-mobile) * 1);
            text-align: center;
            padding: calc(var(--padding-mobile) * 1.25);
        }

        .contact-grid {
            grid-template-columns: 1fr;
            gap: calc(var(--gap-mobile) * 1.5);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-info-section {
            padding: calc(var(--padding-mobile) * 1.25);
        }

        .contact-info-section h4 {
            font-size: var(--text-lg);
            margin-bottom: calc(var(--gap-mobile) * 1);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-mobile) * 0.75);
        }
    }

    @media (max-width: 420px) {
        .contact-header {
            margin-bottom: calc(var(--gap-mobile) * 1.5);
        }

        .contact-title {
            font-size: clamp(var(--text-xl), 4vw, var(--text-3xl));
            margin-bottom: calc(var(--gap-mobile) * 0.5);
        }

        .contact-subtitle {
            font-size: var(--text-sm);
        }

        .top-bar {
            padding: calc(var(--padding-mobile) * 1);
            gap: calc(var(--gap-mobile) * 0.75);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-info-section {
            padding: calc(var(--padding-mobile) * 1);
        }

        .contact-info-section h4 {
            font-size: var(--text-base);
            margin-bottom: calc(var(--gap-mobile) * 0.75);
        }

        .social-links a {
            width: var(--space-8);
            height: var(--space-8);
            font-size: var(--text-base);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-mobile) * 0.5);
        }

        .brand-text {
            font-size: var(--text-lg);
        }
    }

    @media (min-width: 768px) {
        .contact-header {
            margin-bottom: calc(var(--gap-tablet) * 2);
        }

        .contact-title {
            font-size: clamp(var(--text-4xl), 4vw, var(--text-5xl));
            margin-bottom: var(--gap-tablet);
        }

        .contact-subtitle {
            font-size: var(--text-xl);
        }

        .top-bar {
            padding: calc(var(--padding-tablet) * 1)
                calc(var(--padding-tablet) * 1.2);
        }

        .mini-brand {
            gap: var(--gap-tablet);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-grid {
            gap: calc(var(--gap-tablet) * 1.5);
        }

        .contact-info-section {
            padding: calc(var(--padding-tablet) * 1.25);
        }

        .contact-info-section h4 {
            margin-bottom: calc(var(--gap-tablet) * 1.2);
            padding-bottom: calc(var(--padding-tablet) * 0.5);
            gap: calc(var(--gap-tablet) * 0.5);
        }

        .contact-info-section p {
            margin-bottom: calc(var(--gap-tablet) * 0.67);
        }

        .social-links {
            gap: var(--gap-tablet);
            margin-top: var(--gap-tablet);
        }

        .schedule-group {
            margin-bottom: calc(var(--gap-tablet) * 1);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-tablet) * 1);
        }
    }

    @media (min-width: 1024px) {
        .contact-header {
            margin-bottom: calc(var(--gap-desktop) * 1.33);
        }

        .contact-title {
            margin-bottom: var(--gap-desktop);
        }

        .top-bar {
            padding: calc(var(--padding-desktop) * 0.5)
                calc(var(--padding-desktop) * 1);
        }

        .mini-brand {
            gap: var(--gap-desktop);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-grid {
            gap: calc(var(--gap-desktop) * 1.25);
        }

        .contact-info-section {
            padding: calc(var(--padding-desktop) * 1);
        }

        .contact-info-section h4 {
            margin-bottom: calc(var(--gap-desktop) * 0.8);
            padding-bottom: calc(var(--padding-desktop) * 0.33);
            gap: calc(var(--gap-desktop) * 0.5);
        }

        .contact-info-section p {
            margin-bottom: calc(var(--gap-desktop) * 0.5);
        }

        .social-links {
            gap: var(--gap-desktop);
            margin-top: calc(var(--gap-desktop) * 0.67);
        }

        .schedule-group {
            margin-bottom: calc(var(--gap-desktop) * 0.8);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-desktop) * 1);
        }
    }

    @media (min-width: 1400px) {
        .contact-header {
            margin-bottom: var(--gap-desktop-lg);
        }

        .contact-title {
            margin-bottom: var(--gap-desktop-lg);
        }

        .mini-brand {
            gap: var(--gap-desktop-lg);
        }

        .contact-grid {
            gap: var(--gap-desktop-lg);
        }

        .social-links {
            gap: var(--gap-desktop-lg);
        }
    }

    .social-links a:focus-visible {
        outline: var(--border-2) solid var(--focus-ring);
        outline-offset: var(--space-1);
    }

    @media (prefers-reduced-motion: reduce) {
        .contact-component,
        .top-bar,
        .contact-title,
        .contact-subtitle,
        .contact-info-section,
        .contact-info-section h4,
        .contact-info-section p,
        .contact-info-section strong,
        .contact-info-section a,
        .range-name,
        .range-time,
        .social-links a {
            transition: none;
        }

        .status-dot {
            animation: none;
        }

        .social-links a:hover {
            transform: none;
        }
    }

    @media (prefers-contrast: high) {
        .contact-component {
            border: var(--border-2) solid var(--accent-medium);
            background: var(--bg-surface);
        }

        .contact-info-section {
            border: var(--border-2) solid var(--accent-medium);
            background: var(--accent-light);
        }

        .status {
            border-width: var(--border-2);
        }
    }

    .contact-grid {
        contain: layout style;
    }

    .contact-info-section {
        contain: layout style paint;
    }
</style>

<script>
    import {
        useBreakpoints,
        disableTransitionsDuringResize,
    } from "../../utils/breakpoints.js";

    document.addEventListener("DOMContentLoaded", () => {
        const contactSection = document.querySelector(".contact-section");
        const contactSections = document.querySelectorAll(
            ".contact-info-section",
        );

        const breakpoints = useBreakpoints("contact-component", {
            element: contactSection,
        });

        breakpoints.subscribe({
            onBreakpointChange: (newBreakpoint, oldBreakpoint) => {
                console.log(
                    `Contact: Breakpoint changed ${oldBreakpoint} → ${newBreakpoint}`,
                );

                const elementsToAdjust = [...contactSections];
                disableTransitionsDuringResize(elementsToAdjust);
            },
        });

        function formatStatusMessage() {
            const statusTextElement = document.getElementById("statusText");
            if (!statusTextElement) return;

            const message = statusTextElement.textContent.trim();

            if (message.includes(":")) {
                const [statusPart, ...messageParts] = message.split(":");
                const messageRest = messageParts.join(":").trim();

                // Crear HTML con el estado en bold
                statusTextElement.innerHTML = `<strong>${statusPart.trim()}</strong>: ${messageRest}`;
            }
        }

        formatStatusMessage();

        const statusTextElement = document.getElementById("statusText");
        if (statusTextElement) {
            const observer = new MutationObserver(() => {
                setTimeout(formatStatusMessage, 10);
            });

            observer.observe(statusTextElement, {
                childList: true,
                characterData: true,
                subtree: true,
            });
        }

        window.addEventListener("beforeunload", () => {
            breakpoints.unsubscribe();
        });
    });
</script>
