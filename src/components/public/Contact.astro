---
export const prerender = true;

import Text from "../i18n/Text.astro";
import contactData from "../../data/contact-data.json";
import { i18nCore } from "../../i18n/core.js";
import { ContactService } from "../../services/ContactService.js";

// Obtener informaci√≥n de i18n
const { locale } = i18nCore.getI18nInfo(Astro);

// Obtener datos del servicio actualizado
const contactServiceData = ContactService.getContactDataWithTranslations(
    i18nCore,
    locale,
);
const currentStatus = contactServiceData.status;
const fullAddress = contactServiceData.fullAddress;
const socialNetworks = contactServiceData.socials;
const groupedSchedule = ContactService.getGroupedSchedule(locale); // NUEVO: horarios agrupados
---

<!-- üéØ SIMPLIFICADO: Solo la secci√≥n sin padding externo ni background -->
<section class="contact-section" id="contacto">
    <div class="contact-header">
        <h2 class="contact-title">
            <Text key="contact.title" fallback="Contacto" />
        </h2>
        <p class="contact-subtitle">
            <Text key="contact.subtitle" fallback="Donde estamos y como contactarnos" />
        </p>
    </div>
    <div class="contact-container container">
        <!-- Componente de Contacto -->
        <div class="contact-component">
            <!-- Cabecera con Status -->
            <div class="top-bar">
                <div
                    class={`status status-${currentStatus.status}`}
                    id="restaurantStatus"
                >
                    <div class="status-dot" />
                    <span id="statusText" class="status-message">
                        {currentStatus.fullMessage || "No Disponible"}
                    </span>
                </div>
            </div>

            <!-- Contenido de Contacto -->
            <div class="contact-content">
                <div class="contact-grid">
                    <!-- Secci√≥n de Direcci√≥n -->
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.address"
                                fallback="Direcci√≥n"
                            />
                        </h4>
                        <p>{contactData.contact.address.street}</p>
                        <p>
                            {contactData.contact.address.postalCode}
                            {contactData.contact.address.city}
                        </p>
                        <p>
                            {contactData.contact.address.province}, {
                                contactData.contact.address.country
                            }
                        </p>
                    </div>

                    <!-- Secci√≥n de Contacto -->
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.phone"
                                fallback="Contacto"
                            />
                        </h4>
                        <p>
                            <strong
                                ><Text
                                    key="contact.fields.phone"
                                    fallback="Tel√©fono"
                                />:</strong
                            >
                            <a href={`tel:${contactData.contact.phone.main}`}
                                >{contactData.contact.phone.main}</a
                            >
                        </p>
                        <p>
                            <strong
                                ><Text
                                    key="contact.fields.email"
                                    fallback="Email"
                                />:</strong
                            >
                            <a href={`mailto:${contactData.contact.email.main}`}
                                >{contactData.contact.email.main}</a
                            >
                        </p>
                    </div>

                    <!-- Secci√≥n de Horarios -->
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.hours"
                                fallback="Horarios"
                            />
                        </h4>
                        {
                            groupedSchedule.map((group) => (
                                <div class="schedule-group">
                                    <p class="schedule-days">
                                        <strong>{group.daysDisplay}:</strong>
                                    </p>
                                    {group.closed ? (
                                        <p class="schedule-closed">
                                            <Text
                                                key="contact.status.states.closed"
                                                fallback="Cerrado"
                                            />
                                        </p>
                                    ) : (
                                        <div class="schedule-ranges">
                                            {group.ranges.map((range) => (
                                                <p class="schedule-range">
                                                    {range.translatedName && (
                                                        <span class="range-name">
                                                            {
                                                                range.translatedName
                                                            }
                                                            :{" "}
                                                        </span>
                                                    )}
                                                    <span class="range-time">
                                                        {range.start} -{" "}
                                                        {range.end}
                                                    </span>
                                                </p>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            ))
                        }
                    </div>
                    <div class="contact-info-section">
                        <h4>
                            <Text
                                key="contact.sections.social"
                                fallback="S√≠guenos"
                            />
                        </h4>
                        <p>
                            <Text
                                key="contact.values.followUs"
                                fallback="Mantente al d√≠a con nuestras novedades"
                            />
                        </p>
                        <div class="social-links">
                            {socialNetworks.map((social) => (
                                <a
                                    href={social.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    title={social.handle}
                                    aria-label={`<Text key="contact.accessibility.${social.key}" fallback={social.key} />`}
                                >
                                    {social.icon}
                                </a>
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    /* =====================================================
       CONTACT SECTION - ACTUALIZADO CON DESIGN TOKENS
       Mantiene exactamente el mismo dise√±o visual
       ===================================================== */

    /* === CONTACT SECTION SIMPLIFICADA === */
    .contact-section {
        width: 100%;
        position: relative;
    }

    /* === HEADER USANDO TOKENS === */
    .contact-header {
        text-align: center;
        margin-bottom: calc(var(--gap-mobile) * 3);
    }

    .contact-title {
        font-size: clamp(var(--text-3xl), 4vw, var(--text-5xl)); /* Tokens en lugar de clamp(2rem, 4vw, 3.5rem) */
        font-weight: var(--font-light);                          /* Token en lugar de 300 */
        color: var(--accent-primary);                            /* Token din√°mico en lugar de #f4a261 */
        margin-bottom: var(--gap-mobile);
        letter-spacing: var(--tracking-wide);                    /* Token en lugar de 2px */
    }

    .contact-subtitle {
        font-size: var(--text-lg);                              /* Token en lugar de 1.1rem */
        color: var(--text-secondary);                           /* Token din√°mico en lugar de #ccc */
        opacity: 0.8;
    }

    .contact-container {
        position: relative;
        z-index: 2;
    }

    /* === COMPONENTE PRINCIPAL - MANTENIENDO DISE√ëO ORIGINAL === */
    .contact-component {
        /* ‚ú® MANTENER: Exactamente el mismo dise√±o visual */
        background: rgba(0, 0, 0, 0.6);                         /* Mantener opacidad original */
        border-radius: var(--radius-2xl);                       /* Token en lugar de 20px */
        overflow: hidden;
        border: var(--border-2) solid rgba(244, 162, 97, 0.2);  /* Mantener color original */
        box-shadow: 0 var(--space-3) var(--space-8) rgba(0, 0, 0, 0.3); /* Tokens en lugar de 10px 30px */
        backdrop-filter: var(--backdrop-blur);                  /* Token en lugar de blur(10px) */
        max-width: 1200px;
        margin: 0 auto;
    }

    /* === CABECERA CON STATUS === */
    .top-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        background: rgba(0, 0, 0, 0.4);                         /* Mantener opacidad original */
        padding: calc(var(--padding-mobile) * 1.25) calc(var(--padding-mobile) * 1.5);
        border-bottom: var(--border-1) solid rgba(244, 162, 97, 0.3); /* Mantener color original */
    }

    .mini-brand {
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.75);
    }

    .logo-container {
        width: var(--space-12);                                 /* Token en lugar de 45px */
        height: var(--space-8);                                 /* Token en lugar de 32px */
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .logo-container svg {
        width: var(--space-12);
        height: var(--space-8);
    }

    .brand-text {
        color: var(--accent-primary);                          /* Token din√°mico en lugar de #f4a261 */
        font-size: var(--text-xl);                             /* Token en lugar de 1.3rem */
        font-weight: var(--font-medium);                       /* Token en lugar de 500 */
        letter-spacing: var(--tracking-normal);                /* Token en lugar de 1px */
    }

    /* === STATUS INDICATOR - MANTENIENDO COLORES ORIGINALES === */
    .status {
        /* ‚ú® MANTENER: Exactamente los mismos colores originales */
        background: rgba(76, 175, 80, 0.2);                    /* Verde original */
        color: #4caf50;                                         /* Verde original */
        padding: calc(var(--padding-mobile) * 0.5) calc(var(--padding-mobile) * 1);
        border-radius: var(--radius-2xl);                      /* Token en lugar de 20px */
        font-size: var(--text-sm);                             /* Token en lugar de 0.9rem */
        border: var(--border-1) solid #4caf50;                 /* Verde original */
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.5);
        font-weight: var(--font-medium);                       /* Token en lugar de 500 */
        transition: var(--transition-base);                    /* Token en lugar de all 0.3s ease */
    }

    .status-dot {
        width: var(--space-2);                                  /* Token en lugar de 8px */
        height: var(--space-2);
        background: #4caf50;                                    /* Verde original */
        border-radius: var(--radius-full);
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
        100% {
            opacity: 1;
        }
    }

    /* Estados del status - MANTENIENDO COLORES ORIGINALES */
    .status.status-closed {
        background: rgba(244, 67, 54, 0.2);                    /* Rojo original */
        color: #f44336;                                         /* Rojo original */
        border-color: #f44336;
    }

    .status.status-closed .status-dot {
        background: #f44336;                                    /* Rojo original */
    }

    .status.status-closingSoon {
        background: rgba(255, 193, 7, 0.2);                    /* Amarillo original */
        color: #ffc107;                                         /* Amarillo original */
        border-color: #ffc107;
    }

    .status.status-closingSoon .status-dot {
        background: #ffc107;                                    /* Amarillo original */
    }

    /* === CONTENIDO DE CONTACTO === */
    .contact-content {
        padding: calc(var(--padding-mobile) * 1.5);             /* ‚ú® REDUCIDO: Era *3, ahora *1.5 */
    }

    .contact-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: calc(var(--gap-mobile) * 1.5);                     /* ‚ú® REDUCIDO: Era *2.5, ahora *1.5 */
    }

    /* === SECCIONES DE INFORMACI√ìN - MANTENIENDO DISE√ëO ORIGINAL === */
    .contact-info-section {
        padding: calc(var(--padding-mobile) * 1);               /* ‚ú® REDUCIDO: Era *1.5, ahora *1 */
        border: var(--border-1) solid transparent;
        border-radius: var(--radius-xl);                        /* Token en lugar de 15px */
        background: rgba(244, 162, 97, 0.05);                  /* Mantener color original */
    }

    .contact-info-section h4 {
        color: var(--accent-primary);                          /* Token din√°mico en lugar de #f4a261 */
        font-size: var(--text-xl);                             /* Token en lugar de 1.3rem */
        margin-bottom: calc(var(--gap-mobile) * 0.8);          /* ‚ú® REDUCIDO: Era *1.2, ahora *0.8 */
        border-bottom: var(--border-2) solid rgba(244, 162, 97, 0.3); /* Mantener color original */
        padding-bottom: calc(var(--padding-mobile) * 0.3);     /* ‚ú® REDUCIDO: Era *0.5, ahora *0.3 */
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.4);                    /* ‚ú® REDUCIDO: Era *0.6, ahora *0.4 */
    }

    .contact-info-section p {
        color: var(--text-secondary);                          /* Token din√°mico en lugar de #ccc */
        margin-bottom: calc(var(--gap-mobile) * 0.5);          /* ‚ú® REDUCIDO: Era *0.75, ahora *0.5 */
        font-size: var(--text-base);                           /* Token en lugar de 1rem */
        line-height: var(--leading-normal);                    /* Token en lugar de 1.5 */
    }

    .contact-info-section p:last-child {
        margin-bottom: 0;
    }

    .contact-info-section strong {
        color: var(--text-primary);                            /* Token din√°mico */
        font-weight: var(--font-semibold);                     /* Token en lugar de 600 */
    }

    /* Enlaces */
    .contact-info-section a {
        color: var(--accent-primary);                          /* Token din√°mico en lugar de #f4a261 */
        text-decoration: none;
        transition: var(--transition-base);                    /* Token en lugar de all 0.3s ease */
    }

    .contact-info-section a:hover {
        color: var(--text-primary);                            /* Token din√°mico */
        text-decoration: underline;
    }

    /* === HORARIOS === */
    .schedule-group {
        margin-bottom: calc(var(--gap-mobile) * 0.6);          /* ‚ú® REDUCIDO: Era *1, ahora *0.6 */
    }

    .schedule-group:last-child {
        margin-bottom: 0;
    }

    .schedule-days {
        margin-bottom: calc(var(--gap-mobile) * 0.3) !important; /* ‚ú® REDUCIDO: Era *0.5, ahora *0.3 */
    }

    .schedule-closed {
        color: #f44336;                                         /* Rojo original */
        font-style: italic;
        margin-bottom: calc(var(--gap-mobile) * 0.3) !important; /* ‚ú® REDUCIDO: Era *0.5, ahora *0.3 */
    }

    .schedule-ranges {
        margin-left: calc(var(--padding-mobile) * 0.8);        /* ‚ú® REDUCIDO: Era *1, ahora *0.8 */
    }

    .schedule-range {
        margin-bottom: calc(var(--gap-mobile) * 0.15) !important; /* ‚ú® REDUCIDO: Era *0.25, ahora *0.15 */
        display: flex;
        align-items: center;
        gap: calc(var(--gap-mobile) * 0.3);                    /* ‚ú® REDUCIDO: Era *0.5, ahora *0.3 */
    }

    .range-name {
        color: var(--accent-primary);                          /* Token din√°mico en lugar de #f4a261 */
        font-weight: var(--font-medium);                       /* Token en lugar de 500 */
        min-width: var(--space-20);                            /* Token en lugar de 80px */
    }

    .range-time {
        color: var(--text-secondary);                          /* Token din√°mico en lugar de #ccc */
    }

    /* === REDES SOCIALES - MANTENIENDO DISE√ëO ORIGINAL === */
    .social-links {
        display: flex;
        gap: calc(var(--gap-mobile) * 0.5);                    /* ‚ú® REDUCIDO: Era *0.75, ahora *0.5 */
        margin-top: calc(var(--gap-mobile) * 0.6);             /* ‚ú® REDUCIDO: Era *0.9, ahora *0.6 */
    }

    .social-links a {
        /* ‚ú® MANTENER: Exactamente el mismo dise√±o original */
        background: rgba(244, 162, 97, 0.2);                   /* Mantener color original */
        color: #f4a261;                                         /* Mantener color original */
        width: var(--space-10);                                /* Token en lugar de 40px */
        height: var(--space-10);
        border-radius: var(--radius-lg);                       /* Token en lugar de 10px */
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: var(--transition-base);                    /* Token en lugar de all 0.3s ease */
        font-size: var(--text-lg);                             /* Token en lugar de 18px */
        border: var(--border-1) solid rgba(244, 162, 97, 0.3); /* Mantener color original */
    }

    .social-links a:hover {
        /* ‚ú® MANTENER: Exactamente el mismo hover original */
        background: rgba(244, 162, 97, 0.4);                   /* Mantener color original */
        color: var(--text-primary);                            /* Token din√°mico */
        transform: translateY(-2px);
        border-color: rgba(244, 162, 97, 0.6);                 /* Mantener color original */
    }

    /* === RESPONSIVE - USANDO TOKENS === */

    /* MOBILE (hasta 767px) */
    @media (max-width: 767px) {
        /* Header en columna para m√≥vil */
        .top-bar {
            flex-direction: column;
            gap: calc(var(--gap-mobile) * 1);
            text-align: center;
            padding: calc(var(--padding-mobile) * 1.25);
        }

        /* Grid de una sola columna en m√≥vil */
        .contact-grid {
            grid-template-columns: 1fr;
            gap: calc(var(--gap-mobile) * 1.5);
        }

        /* Reducir padding del container en m√≥vil */
        .contact-content {
            padding: var(--padding-mobile);
        }

        /* Ajustar padding de las secciones */
        .contact-info-section {
            padding: calc(var(--padding-mobile) * 1.25);
        }

        .contact-info-section h4 {
            font-size: var(--text-lg);                         /* Token en lugar de 1.2rem */
            margin-bottom: calc(var(--gap-mobile) * 1);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-mobile) * 0.75);
        }
    }

    /* MOBILE PEQUE√ëO (hasta 420px) */
    @media (max-width: 420px) {
        .top-bar {
            padding: calc(var(--padding-mobile) * 1);
            gap: calc(var(--gap-mobile) * 0.75);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-info-section {
            padding: calc(var(--padding-mobile) * 1);
        }

        .contact-info-section h4 {
            font-size: var(--text-base);                       /* Token en lugar de 1.1rem */
            margin-bottom: calc(var(--gap-mobile) * 0.75);
        }

        .social-links a {
            width: var(--space-8);                             /* Token en lugar de 35px */
            height: var(--space-8);
            font-size: var(--text-base);                       /* Token en lugar de 16px */
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-mobile) * 0.5);
        }

        .brand-text {
            font-size: var(--text-lg);                         /* Token en lugar de 1.1rem */
        }
    }

    /* TABLET Y SUPERIOR (768px+) */
    @media (min-width: 768px) {
        .top-bar {
            padding: calc(var(--padding-tablet) * 1) calc(var(--padding-tablet) * 1.2);
        }

        .mini-brand {
            gap: var(--gap-tablet);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-grid {
            gap: calc(var(--gap-tablet) * 1.5);
        }

        .contact-info-section {
            padding: calc(var(--padding-tablet) * 1.25);
        }

        .contact-info-section h4 {
            margin-bottom: calc(var(--gap-tablet) * 1.2);
            padding-bottom: calc(var(--padding-tablet) * 0.5);
            gap: calc(var(--gap-tablet) * 0.5);
        }

        .contact-info-section p {
            margin-bottom: calc(var(--gap-tablet) * 0.67);
        }

        .social-links {
            gap: var(--gap-tablet);
            margin-top: var(--gap-tablet);
        }

        .schedule-group {
            margin-bottom: calc(var(--gap-tablet) * 1);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-tablet) * 1);
        }
    }

    /* DESKTOP (1024px+) */
    @media (min-width: 1024px) {
        .top-bar {
            padding: calc(var(--padding-desktop) * 0.5) calc(var(--padding-desktop) * 1);
        }

        .mini-brand {
            gap: var(--gap-desktop);
        }

        .contact-content {
            padding: var(--padding-mobile);
        }

        .contact-grid {
            gap: calc(var(--gap-desktop) * 1.25);
        }

        .contact-info-section {
            padding: calc(var(--padding-desktop) * 1);
        }

        .contact-info-section h4 {
            margin-bottom: calc(var(--gap-desktop) * 0.8);
            padding-bottom: calc(var(--padding-desktop) * 0.33);
            gap: calc(var(--gap-desktop) * 0.5);
        }

        .contact-info-section p {
            margin-bottom: calc(var(--gap-desktop) * 0.5);
        }

        .social-links {
            gap: var(--gap-desktop);
            margin-top: calc(var(--gap-desktop) * 0.67);
        }

        .schedule-group {
            margin-bottom: calc(var(--gap-desktop) * 0.8);
        }

        .schedule-ranges {
            margin-left: calc(var(--padding-desktop) * 1);
        }
    }

    /* DESKTOP LARGE (1400px+) */
    @media (min-width: 1400px) {
        .mini-brand {
            gap: var(--gap-desktop-lg);
        }

        .contact-grid {
            gap: var(--gap-desktop-lg);
        }

        .social-links {
            gap: var(--gap-desktop-lg);
        }
    }

    /* === ACCESIBILIDAD MEJORADA === */
    
    /* Focus visible para navegaci√≥n por teclado */
    .social-links a:focus-visible {
        outline: var(--border-2) solid var(--focus-ring);
        outline-offset: var(--space-1);
    }

    /* === PREFERENCIAS DE USUARIO === */
    
    /* Respeto por movimiento reducido */
    @media (prefers-reduced-motion: reduce) {
        .status {
            transition: none;
        }
        
        .status-dot {
            animation: none;
        }
        
        .social-links a {
            transition: none;
        }
        
        .social-links a:hover {
            transform: none;
        }
    }
    
    /* Alto contraste */
    @media (prefers-contrast: high) {
        .contact-component {
            border: var(--border-4) solid rgba(244, 162, 97, 0.5);
            background: rgba(0, 0, 0, 0.8);
        }
        
        .contact-info-section {
            border: var(--border-2) solid rgba(244, 162, 97, 0.2);
            background: rgba(244, 162, 97, 0.1);
        }
        
        .status {
            border-width: var(--border-2);
        }
    }

    /* === OPTIMIZACIONES DE PERFORMANCE === */
    
    /* Contener layout para mejor performance */
    .contact-grid {
        contain: layout style;
    }
    
    .contact-info-section {
        contain: layout style paint;
    }
</style>

<script>
    import {
        useBreakpoints,
        disableTransitionsDuringResize,
    } from "../../utils/breakpoints.js";

    document.addEventListener("DOMContentLoaded", () => {
        const contactSection = document.querySelector(".contact-section");
        const contactSections = document.querySelectorAll(".contact-info-section");

        // Inicializar sistema de breakpoints
        const breakpoints = useBreakpoints("contact-component", {
            element: contactSection,
        });

        // Suscribirse a cambios de breakpoint
        breakpoints.subscribe({
            onBreakpointChange: (newBreakpoint, oldBreakpoint) => {
                console.log(
                    `Contact: Breakpoint changed ${oldBreakpoint} ‚Üí ${newBreakpoint}`,
                );

                // Deshabilitar transiciones durante el cambio
                const elementsToAdjust = [...contactSections];
                disableTransitionsDuringResize(elementsToAdjust);
            },
        });

        // Formatear mensajes de estado para hacer bold la parte del estado
        function formatStatusMessage() {
            const statusTextElement = document.getElementById("statusText");
            if (!statusTextElement) return;

            const message = statusTextElement.textContent.trim();

            // Verificar si el mensaje tiene formato "Estado: Mensaje"
            if (message.includes(":")) {
                const [statusPart, ...messageParts] = message.split(":");
                const messageRest = messageParts.join(":").trim();

                // Crear HTML con el estado en bold
                statusTextElement.innerHTML = `<strong>${statusPart.trim()}</strong>: ${messageRest}`;
            }
        }

        // Ejecutar formateo inicial
        formatStatusMessage();

        // Observer para detectar cambios en el texto del status (para actualizaciones din√°micas)
        const statusTextElement = document.getElementById("statusText");
        if (statusTextElement) {
            const observer = new MutationObserver(() => {
                // Peque√±o delay para evitar formatear mientras se est√° actualizando
                setTimeout(formatStatusMessage, 10);
            });

            observer.observe(statusTextElement, {
                childList: true,
                characterData: true,
                subtree: true,
            });
        }

        // Cleanup
        window.addEventListener('beforeunload', () => {
            breakpoints.unsubscribe();
        });
    });
</script>