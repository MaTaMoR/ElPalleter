---
export const prerender = true;

import ResponsiveImage from './ResponsiveImage.astro';
import { i18nCore } from '../../i18n/core';

export interface Props {
    images: Array<{
        imageId: string;
        name: string;
        order?: number;
    }>;
}

const { images } = Astro.props;
---

<div class="slider-container" data-slider="historia-slider">
    <div class="slider-wrapper">
        {images.map((image, index) => (
            <div class={`slide ${index === 0 ? 'active' : ''}`}>
                <ResponsiveImage
                    imageId={image.imageId}
                    alt={image.name}
                    className="slide-background"
                    loading={index === 0 ? 'eager' : 'lazy'}
                    priority={index === 0}
                    showFallback={true}
                    fallbackText="Imagen no disponible"
                    fallbackIcon="image"
                />
                
                {image.name && (
                    <div class="slide-caption">{i18nCore.safeTranslation(image.name, Astro, image.name)}</div>
                )}
            </div>
        ))}
    </div>
    
    <!-- Flechas de navegación -->
    <button class="slider-arrow prev" aria-label="Imagen anterior">‹</button>
    <button class="slider-arrow next" aria-label="Siguiente imagen">›</button>
    
    <!-- Puntos de navegación -->
    <div class="slider-nav">
        {images.map((_, index) => (
            <button 
                class={`nav-dot ${index === 0 ? 'active' : ''}`}
                data-slide={index}
                aria-label={`Ir a imagen ${index + 1}`}
            ></button>
        ))}
    </div>
</div>

<style>
    /* === IMAGE SLIDER - MIGRADO AL DESIGN SYSTEM === */
    
    .slider-container {
        position: relative;
        border-radius: var(--radius-2xl);
        overflow: hidden;
        background: var(--dark-900);
        width: 100%;
        min-height: inherit;
        height: 100%;
        
        /* Optimizaciones del sistema */
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        isolation: isolate;
        contain: layout style paint;
    }
    
    .slider-wrapper {
        display: flex;
        transition: transform var(--duration-500) var(--ease-in-out);
        height: 100%;
        width: 100%;
        transform: translate3d(0, 0, 0);
        will-change: transform;
        backface-visibility: hidden;
    }
    
    .slide {
        min-width: 100%;
        max-width: 100%;
        height: 100%;
        position: relative;
        flex-shrink: 0;
        backface-visibility: hidden;
        contain: layout style paint;
        overflow: hidden;
    }
    
    .slide :global(.slide-background) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        z-index: 0;
    }
    
    /* === CONTROLES DEL SLIDER - USANDO SISTEMA === */
    .slider-nav {
        position: absolute;
        bottom: var(--space-8);
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: var(--space-4);
        z-index: 10;
    }
    
    .nav-dot {
        width: var(--space-3);
        height: var(--space-3);
        border-radius: var(--radius-full);
        background: rgba(255, 255, 255, 0.4);
        cursor: pointer;
        transition: var(--transition-base);
        border: var(--border-2) solid rgba(255, 255, 255, 0.6);
    }
    
    .nav-dot.active {
        background: var(--accent-primary);
        border-color: var(--accent-primary);
        transform: scale(1.2);
    }
    
    .nav-dot:hover {
        background: rgba(255, 255, 255, 0.8);
    }

    .nav-dot:focus-visible {
        outline: var(--border-2) solid var(--focus-ring);
        outline-offset: var(--space-1);
    }
    
    /* === FLECHAS DEL SLIDER - USANDO CLASES DEL SISTEMA === */
    .slider-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        
        /* Usando las clases glass del sistema */
        background: var(--glass-bg);
        backdrop-filter: var(--backdrop-blur);
        border: var(--border-1) solid var(--glass-border);
        color: var(--text-primary);
        
        width: var(--space-12);
        height: var(--space-12);
        border-radius: var(--radius-full);
        cursor: pointer;
        font-size: var(--text-2xl);
        transition: var(--transition-base);
        z-index: 10;
        
        /* Centrar el contenido */
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .slider-arrow:hover {
        background: var(--accent-primary);
        border-color: var(--accent-primary);
        color: #ffffff;
        transform: translateY(-50%) scale(1.1);
    }

    .slider-arrow:focus-visible {
        outline: var(--border-2) solid var(--focus-ring);
        outline-offset: var(--space-1);
    }
    
    .slider-arrow.prev {
        left: var(--space-8);
    }
    
    .slider-arrow.next {
        right: var(--space-8);
    }
    
    /* === CAPTION CON EFECTO PILL - USANDO SISTEMA === */
    .slide-caption {
        position: absolute;
        bottom: var(--space-16);
        left: 50%;
        transform: translateX(-50%);
        text-align: center;
        color: var(--text-primary);
        font-size: var(--text-lg);
        font-weight: var(--font-semibold);
        
        /* Sombra de texto adaptativa */
        text-shadow: 0 0 var(--space-2) var(--text-shadow-color),
                     1px 1px var(--space-1) var(--text-shadow-color);
        
        /* Usando glass del sistema */
        background: var(--glass-bg);
        backdrop-filter: var(--backdrop-blur-subtle);
        padding: var(--space-2) var(--space-4);
        border-radius: var(--radius-2xl);
        display: inline-block;
        width: max-content;
        max-width: 85%;
        line-height: var(--leading-tight);
        opacity: 0;
        transition: var(--transition-base);
        border: var(--border-1) solid var(--glass-border);
    }
    
    .slide.active .slide-caption {
        opacity: 1;
    }
    
    /* === RESPONSIVE - USANDO BREAKPOINTS DEL SISTEMA === */
    
    /* MÓVIL - BORDER-RADIUS MENOR */
    @media (max-width: 767px) {
        .slider-container {
            border-radius: var(--radius-xl);
        }
    }
    
    /* MÓVIL - CONTROLES MÁS PEQUEÑOS */
    @media (max-width: 640px) {
        .slider-arrow {
            width: var(--space-10);
            height: var(--space-10);
            font-size: var(--text-xl);
        }
        
        .slider-arrow.prev {
            left: var(--space-4);
        }
        
        .slider-arrow.next {
            right: var(--space-4);
        }
        
        .slide-caption {
            font-size: var(--text-base);
            bottom: var(--space-16);
        }
        
        .nav-dot {
            width: var(--space-3);
            height: var(--space-3);
        }
    }
    
    /* MOBILE PEQUEÑO */
    @media (max-width: 420px) {
        .slider-arrow {
            width: var(--space-8);
            height: var(--space-8);
            font-size: var(--text-lg);
        }
        
        .slider-arrow.prev {
            left: var(--space-3);
        }
        
        .slider-arrow.next {
            right: var(--space-3);
        }
        
        .slide-caption {
            font-size: var(--text-sm);
            bottom: var(--space-12);
            padding: var(--space-1) var(--space-3);
        }
        
        .slider-nav {
            bottom: var(--space-6);
            gap: var(--space-3);
        }
    }

    /* === ESTADOS DE CARGA === */
    .slider-container.loading {
        opacity: 0.7;
    }
    
    .slider-container.loading .slider-arrow {
        pointer-events: none;
        opacity: 0.5;
    }

    /* === ACCESIBILIDAD === */
    @media (prefers-reduced-motion: reduce) {
        .slider-wrapper,
        .slide-caption,
        .nav-dot,
        .slider-arrow {
            transition: none;
        }
        
        .nav-dot.active {
            transform: none;
        }
        
        .slider-arrow:hover {
            transform: translateY(-50%);
        }
    }
    
    @media (prefers-contrast: high) {
        .nav-dot {
            border-width: var(--border-4);
            background: rgba(255, 255, 255, 0.8);
        }
        
        .slider-arrow {
            background: var(--bg-primary);
            border: var(--border-2) solid var(--accent-primary);
        }
        
        .slide-caption {
            background: var(--bg-primary);
            border: var(--border-2) solid var(--accent-primary);
        }
    }

    /* === MEJORAS DE RENDIMIENTO === */
    .slider-wrapper {
        will-change: transform;
    }
    
    .slide {
        will-change: opacity;
    }
    
    .slider-container {
        contain: layout style paint;
    }

    /* === UTILIDADES ADICIONALES DEL SISTEMA === */
    .slider-arrow.disabled {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
    }

    .slider-container.fullscreen {
        border-radius: 0;
    }
</style>

<script>
    class ImageSlider {
        constructor(containerId) {
            this.containerId = containerId || 'sliderContainer';
            this.container = document.querySelector(`[data-slider="${this.containerId}"]`);
            
            if (!this.container) {
                console.warn(`Slider container with data-slider="${this.containerId}" not found`);
                return;
            }
            
            this.currentSlide = 0;
            this.sliderWrapper = this.container.querySelector('.slider-wrapper');
            this.dots = this.container.querySelectorAll('.nav-dot');
            this.slides = this.container.querySelectorAll('.slide');
            this.prevBtn = this.container.querySelector('.slider-arrow.prev');
            this.nextBtn = this.container.querySelector('.slider-arrow.next');
            this.totalSlides = this.slides.length;
            this.autoPlayInterval = null;
            this.isTransitioning = false;
            
            if (this.totalSlides > 0 && this.sliderWrapper) {
                this.init();
                this.updateSlider();
            }
        }
        
        init() {
            // Event listeners para las flechas
            if (this.prevBtn) {
                this.prevBtn.addEventListener('click', () => {
                    if (!this.isTransitioning) {
                        this.clearAutoPlay();
                        this.prevSlide();
                        this.startAutoPlay();
                    }
                });
            }
            
            if (this.nextBtn) {
                this.nextBtn.addEventListener('click', () => {
                    if (!this.isTransitioning) {
                        this.clearAutoPlay();
                        this.nextSlide();
                        this.startAutoPlay();
                    }
                });
            }
            
            // Event listeners para los dots
            this.dots.forEach((dot, index) => {
                dot.addEventListener('click', () => {
                    if (!this.isTransitioning) {
                        this.clearAutoPlay();
                        this.goToSlide(index);
                        this.startAutoPlay();
                    }
                });
            });
            
            // Pausar autoplay en hover
            if (this.sliderWrapper) {
                this.sliderWrapper.addEventListener('mouseenter', () => this.clearAutoPlay());
                this.sliderWrapper.addEventListener('mouseleave', () => this.startAutoPlay());
            }
            
            // Iniciar autoplay
            this.startAutoPlay();
            
            // Navegación por teclado
            this.container.addEventListener('keydown', (e) => this.handleKeydown(e));
            
            // Hacer el container focusable
            this.container.setAttribute('tabindex', '0');
            this.container.setAttribute('role', 'region');
            this.container.setAttribute('aria-label', 'Galería de imágenes');
        }
        
        handleKeydown(e) {
            if (this.isTransitioning) return;
            
            switch(e.key) {
                case 'ArrowLeft':
                    e.preventDefault();
                    this.clearAutoPlay();
                    this.prevSlide();
                    this.startAutoPlay();
                    break;
                case 'ArrowRight':
                    e.preventDefault();
                    this.clearAutoPlay();
                    this.nextSlide();
                    this.startAutoPlay();
                    break;
                case 'Home':
                    e.preventDefault();
                    this.clearAutoPlay();
                    this.goToSlide(0);
                    this.startAutoPlay();
                    break;
                case 'End':
                    e.preventDefault();
                    this.clearAutoPlay();
                    this.goToSlide(this.totalSlides - 1);
                    this.startAutoPlay();
                    break;
            }
        }
        
        updateSlider() {
            if (!this.sliderWrapper || this.totalSlides === 0) return;
            
            // Bloquear nuevas transiciones
            this.isTransitioning = true;
            
            // Mover el slider
            const translateX = -this.currentSlide * 100;
            this.sliderWrapper.style.transform = `translateX(${translateX}%)`;
            
            // Actualizar dots
            this.dots.forEach((dot, index) => {
                dot.classList.toggle('active', index === this.currentSlide);
                dot.setAttribute('aria-pressed', index === this.currentSlide);
            });
            
            // Actualizar slides activos
            this.slides.forEach((slide, index) => {
                slide.classList.toggle('active', index === this.currentSlide);
            });
            
            // Actualizar aria-live para lectores de pantalla
            const currentSlideInfo = `Imagen ${this.currentSlide + 1} de ${this.totalSlides}`;
            this.container.setAttribute('aria-label', `Galería de imágenes - ${currentSlideInfo}`);
            
            // Desbloquear después de la transición
            setTimeout(() => {
                this.isTransitioning = false;
            }, 500);
        }
        
        nextSlide() {
            this.currentSlide = (this.currentSlide + 1) % this.totalSlides;
            this.updateSlider();
        }
        
        prevSlide() {
            this.currentSlide = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
            this.updateSlider();
        }
        
        goToSlide(index) {
            if (index >= 0 && index < this.totalSlides) {
                this.currentSlide = index;
                this.updateSlider();
            }
        }
        
        startAutoPlay() {
            if (true) return; // Autoplay deshabilitado por defecto
            this.clearAutoPlay();
            if (this.totalSlides > 1) {
                this.autoPlayInterval = setInterval(() => {
                    if (!this.isTransitioning) {
                        this.nextSlide();
                    }
                }, 3500);
            }
        }
        
        clearAutoPlay() {
            if (this.autoPlayInterval) {
                clearInterval(this.autoPlayInterval);
                this.autoPlayInterval = null;
            }
        }
        
        destroy() {
            this.clearAutoPlay();
        }
    }
    
    // Inicializar sliders cuando se carga la página
    document.addEventListener('DOMContentLoaded', () => {
        const sliderContainers = document.querySelectorAll('[data-slider]');
        const sliders = [];
        
        sliderContainers.forEach(container => {
            const sliderId = container.getAttribute('data-slider');
            const slider = new ImageSlider(sliderId);
            if (slider.totalSlides > 0) {
                sliders.push(slider);
            }
        });
        
        // Limpiar todos los sliders al salir
        window.addEventListener('beforeunload', () => {
            sliders.forEach(slider => slider.destroy());
        });
    });
</script>